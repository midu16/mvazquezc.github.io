<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>golang on Linuxera</title>
    <link>https://linuxera.org/tags/golang/</link>
    <description>Recent content in golang on Linuxera</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 19 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://linuxera.org/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Enhanced Version and Build Information for your Go programs with ldflags</title>
      <link>https://linuxera.org/enhanced-version-and-build-information-for-your-go-programs/</link>
      <pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://linuxera.org/enhanced-version-and-build-information-for-your-go-programs/</guid>
      <description>Enhanced Version and Build Information for your Go programs with ldflags In the previous post we show how to create a simple CLI in Go with Cobra. I received a suggestion from one of my colleagues, Andrew Block. He suggested complementing that post with the use of ldflags at build time in order to define specific information to a specific build like build time, git commit, etc.
Andy is also running a blog, go check it out!</description>
    </item>
    
    <item>
      <title>Writing CLIs in Go with Cobra</title>
      <link>https://linuxera.org/writing-clis-go-cobra/</link>
      <pubDate>Sun, 15 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://linuxera.org/writing-clis-go-cobra/</guid>
      <description>Writing CLIs in Go using Cobra A few months ago, I was working with my colleague Alberto in a CLI. The language of choice was Go and I manage to learn a thing or two. In today&amp;rsquo;s post we will see a very basic skeleton for a CLI written in Go. This will certainly help me in the future as a template for the next CLI, and maybe it helps you too!</description>
    </item>
    
    <item>
      <title>Enabling Prometheus Metrics on your Applications</title>
      <link>https://linuxera.org/prometheus-metrics-on-your-applications/</link>
      <pubDate>Sun, 11 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://linuxera.org/prometheus-metrics-on-your-applications/</guid>
      <description>Instrumenting your Applications We usually see systems being monitored by Ops teams, in fact, there are lots of valuable metrics that help Ops teams understand how the infrastructure they are managing is doing, but when it comes to applications monitoring, we don&amp;rsquo;t see those being monitored that carefully most of the time. Sometimes that ends up in application crashes that might be prevented with a proper monitoring strategy.
In this blog post we are going to see how we can instrument our applications using Prometheus metrics libraries.</description>
    </item>
    
  </channel>
</rss>
