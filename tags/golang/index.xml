<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>golang on Linuxera</title>
    <link>https://linuxera.org/tags/golang/</link>
    <description>Recent content in golang on Linuxera</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Aug 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://linuxera.org/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Enabling Prometheus Metrics on your Applications</title>
      <link>https://linuxera.org/prometheus-metrics-on-your-applications/</link>
      <pubDate>Sun, 11 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://linuxera.org/prometheus-metrics-on-your-applications/</guid>
      <description>Instrumenting your Applications We usually see systems being monitored by Ops teams, in fact, there are lots of valuable metrics that help Ops teams understand how the infrastructure they are managing is doing, but when it comes to applications monitoring, we don&amp;rsquo;t see those being monitored that carefully most of the time. Sometimes that ends up in application crashes that might be prevented with a proper monitoring strategy.
In this blog post we are going to see how we can instrument our applications using Prometheus metrics libraries.</description>
    </item>
    
  </channel>
</rss>
