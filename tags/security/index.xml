<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>security on Linuxera</title>
    <link>https://linuxera.org/tags/security/</link>
    <description>Recent content in security on Linuxera</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://linuxera.org/tags/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>User Namespaces in Kubernetes</title>
      <link>https://linuxera.org/user-namespaces-in-kubernetes/</link>
      <pubDate>Thu, 25 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://linuxera.org/user-namespaces-in-kubernetes/</guid>
      <description>User Namespaces in Kubernetes In Kubernetes v1.25 we got a new alpha feature, user namespaces. For those who are not familiar with user namespaces we can briefly describe them as a security mechanism that isolates security-related identifiers and attributes, in particular user IDs and group IDs.
You can read more about user namespaces here.
In the containers space we can leverage user namespaces to run processes as root in the container and with a non-privileged user in the host.</description>
    </item>
    
    <item>
      <title>Working with Pod Security Standards</title>
      <link>https://linuxera.org/working-with-pod-security-standards/</link>
      <pubDate>Wed, 24 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://linuxera.org/working-with-pod-security-standards/</guid>
      <description>Working with Pod Security Standards In Kubernetes v1.25 Pod Security admission has moved to stable, replacing Pod Security Policy admission. This feature has been in beta and enabled by default since Kubernetes v1.23 in this post we are going to cover what&amp;rsquo;s new with Pod Security Admission (PSA) and how it affects the workloads being deployed in our clusters.
Note
For this post I&amp;rsquo;ll be running a Kubernetes v1.25 cluster. If you want to try this in your own environment you can use your favorite tool to get a K8s cluster up and running, I&amp;rsquo;ll be using kcli.</description>
    </item>
    
    <item>
      <title>Container Security - Linux Capabilities and Secure Compute Profiles</title>
      <link>https://linuxera.org/container-security-capabilities-seccomp/</link>
      <pubDate>Sat, 27 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://linuxera.org/container-security-capabilities-seccomp/</guid>
      <description>Container Security - Linux Capabilities and Secure Compute Profiles In this post we are going to see two security mechanisms used in Linux Containers in order to provide a security layer for our workloads.
We will see how Linux Capabilities and Secure Compute Profiles can be used for limiting the attack surface for our containers.
The first part of the blog post will be an introduction to Linux Capabilities and Secure Compute Profiles, second part will show how these technologies work through the use of demos.</description>
    </item>
    
  </channel>
</rss>
